{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n;\nconst initialState = {\n  loggedIn: false,\n  googleToken: ''\n};\nexport const authorizationSlice = createSlice({\n  name: 'authorization',\n  initialState,\n  reducers: {\n    setLoggedIn: (state, action) => {\n      state.loggedIn = action.payload;\n    },\n    setGoogleToken: (state, action) => {\n      state.googleToken = action.payload;\n    }\n  }\n});\nexport const authorice = (log, token) => async dispatch => {\n  dispatch(setGoogleToken(token));\n  dispatch(setLoggedIn(log));\n};\nexport const {\n  setLoggedIn,\n  setGoogleToken\n} = authorizationSlice.actions;\nexport const selectIsLoggedIn = state => state.authorization.loggedIn;\nexport const selectGoogleToken = state => state.authorization.googleToken;\nexport default authorizationSlice.reducer;","map":{"version":3,"sources":["/home/maci/Escritorio/3/practicas/fe/src/components/Auth/autSlice.ts"],"names":["createSlice","initialState","loggedIn","googleToken","authorizationSlice","name","reducers","setLoggedIn","state","action","payload","setGoogleToken","authorice","log","token","dispatch","actions","selectIsLoggedIn","authorization","selectGoogleToken","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAMC;AAED,MAAMC,YAAgC,GAAG;AACrCC,EAAAA,QAAQ,EAAE,KAD2B;AAErCC,EAAAA,WAAW,EAAE;AAFwB,CAAzC;AAKA,OAAO,MAAMC,kBAAkB,GAAGJ,WAAW,CAAC;AAC1CK,EAAAA,IAAI,EAAE,eADoC;AAE1CJ,EAAAA,YAF0C;AAG1CK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA2C;AACpDD,MAAAA,KAAK,CAACN,QAAN,GAAiBO,MAAM,CAACC,OAAxB;AACH,KAHK;AAINC,IAAAA,cAAc,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAuC;AACnDD,MAAAA,KAAK,CAACL,WAAN,GAAoBM,MAAM,CAACC,OAA3B;AACH;AANK;AAHgC,CAAD,CAAtC;AAcP,OAAO,MAAME,SAAS,GAAG,CAACC,GAAD,EAAcC,KAAd,KAA4B,MAAOC,QAAP,IAAiC;AAClFA,EAAAA,QAAQ,CAACJ,cAAc,CAACG,KAAD,CAAf,CAAR;AACAC,EAAAA,QAAQ,CAACR,WAAW,CAACM,GAAD,CAAZ,CAAR;AACH,CAHM;AAKP,OAAO,MAAM;AAAEN,EAAAA,WAAF;AAAeI,EAAAA;AAAf,IAAkCP,kBAAkB,CAACY,OAA3D;AACP,OAAO,MAAMC,gBAAgB,GAAIT,KAAD,IAAsBA,KAAK,CAACU,aAAN,CAAoBhB,QAAnE;AACP,OAAO,MAAMiB,iBAAiB,GAAIX,KAAD,IAAsBA,KAAK,CAACU,aAAN,CAAoBf,WAApE;AAEP,eAAeC,kBAAkB,CAACgB,OAAlC","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppDispatch, RootState } from '../../app/store';\n\ninterface AuthorizationState {\n    loggedIn: boolean,\n    googleToken: any,\n};\n\nconst initialState: AuthorizationState = {\n    loggedIn: false,\n    googleToken: '',\n};\n\nexport const authorizationSlice = createSlice({\n    name: 'authorization',\n    initialState,\n    reducers: {\n        setLoggedIn: (state, action: PayloadAction<boolean>) => {\n            state.loggedIn = action.payload;\n        },\n        setGoogleToken: (state, action: PayloadAction<any>) => {\n            state.googleToken = action.payload;\n        },\n\n    },\n});\n\nexport const authorice = (log:boolean, token:any) => async (dispatch: AppDispatch) => {\n    dispatch(setGoogleToken(token));\n    dispatch(setLoggedIn(log));\n}\n\nexport const { setLoggedIn, setGoogleToken } = authorizationSlice.actions;\nexport const selectIsLoggedIn = (state: RootState) => state.authorization.loggedIn;\nexport const selectGoogleToken = (state: RootState) => state.authorization.googleToken;\n\nexport default authorizationSlice.reducer;"]},"metadata":{},"sourceType":"module"}